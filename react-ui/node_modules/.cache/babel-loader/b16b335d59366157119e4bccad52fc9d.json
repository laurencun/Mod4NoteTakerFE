{"ast":null,"code":"var BASE_URL='http://localhost:3000';var TODOS_URL=\"\".concat(BASE_URL,\"/todos\");var FETCH_TODOS='FETCH_TODOS';var FETCH_COMPLETED='FETCH_COMPLETED';var NEW_TODO='NEW_TODO';var DELETE_TODO='DELETE_TODO';var COMPLETE_TODO='COMPLETE_TODO';var UPDATED_TODO='UPDATED_TODO';var STAR_TODO='STAR_TODO';export var fetchTodos=function fetchTodos(){return function(dispatch){fetch(TODOS_URL).then(function(res){return res.json();}).then(function(todos){return dispatch({type:FETCH_TODOS,todos:todos});});};};export var fetchCompleted=function fetchCompleted(){return function(dispatch){fetch(TODOS_URL).then(function(res){return res.json();}).then(function(todos){return dispatch({type:FETCH_COMPLETED,todos:todos.filter(function(t){return t.completed===true;})});});};};export var createTodo=function createTodo(todo){return function(dispatch){var newTodo={title:todo.title,content:todo.content,completed:false,starred:false};fetch(TODOS_URL,{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(newTodo)}).then(function(res){return res.json();}).then(function(todo){return dispatch({type:NEW_TODO,newTodo:newTodo});});};};export var deleteTodo=function deleteTodo(id){return function(dispatch){fetch(\"http://localhost:3000/todos/\".concat(id),{method:'DELETE'}).then(function(res){return res.json();}).then(function(todo){return dispatch({type:DELETE_TODO,todo:todo});});};};export var markComplete=function markComplete(todo){return function(dispatch){fetch(\"http://localhost:3000/todos/\".concat(todo.id),{method:'PATCH',headers:{'content-type':'application/json'},body:JSON.stringify({completed:true})}).then(function(res){return res.json();}).then(function(updatedTodo){return dispatch({type:COMPLETE_TODO,updatedTodo:updatedTodo});});};};export var markStarred=function markStarred(todo){return function(dispatch){fetch(\"http://localhost:3000/todos/\".concat(todo.id),{method:'PATCH',headers:{'content-type':'application/json'},body:JSON.stringify({starred:true})}).then(function(res){return res.json();}).then(function(updatedTodo){dispatch({type:STAR_TODO,updatedTodo:updatedTodo});});};};export var markUnstarred=function markUnstarred(todo){return function(dispatch){fetch(\"http://localhost:3000/todos/\".concat(todo.id),{method:'PATCH',headers:{'content-type':'application/json'},body:JSON.stringify({starred:false})}).then(function(res){return res.json();}).then(function(updatedTodo){dispatch({type:STAR_TODO,updatedTodo:updatedTodo});});};};export var updateTodo=function updateTodo(todo){return function(dispatch){fetch(\"http://localhost:3000/todos/\".concat(todo.id),{method:'PATCH',headers:{'content-type':'application/json'},body:JSON.stringify({title:\"\".concat(todo.title),content:\"\".concat(todo.content)})}).then(function(res){return res.json();}).then(function(updatedTodo){return dispatch({type:UPDATED_TODO,updatedTodo:updatedTodo});});};};","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/actions/todoActions.js"],"names":["BASE_URL","TODOS_URL","FETCH_TODOS","FETCH_COMPLETED","NEW_TODO","DELETE_TODO","COMPLETE_TODO","UPDATED_TODO","STAR_TODO","fetchTodos","dispatch","fetch","then","res","json","todos","type","fetchCompleted","filter","t","completed","createTodo","todo","newTodo","title","content","starred","method","headers","body","JSON","stringify","deleteTodo","id","markComplete","updatedTodo","markStarred","markUnstarred","updateTodo"],"mappings":"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","sourcesContent":["const BASE_URL = 'http://localhost:3000'\nconst TODOS_URL = `${BASE_URL}/todos`\nconst FETCH_TODOS = 'FETCH_TODOS'\nconst FETCH_COMPLETED = 'FETCH_COMPLETED'\nconst NEW_TODO = 'NEW_TODO'\nconst DELETE_TODO = 'DELETE_TODO'\nconst COMPLETE_TODO = 'COMPLETE_TODO'\nconst UPDATED_TODO = 'UPDATED_TODO'\nconst STAR_TODO = 'STAR_TODO'\n\nexport const fetchTodos = () => dispatch =>  {\n        fetch(TODOS_URL)\n        .then(res => res.json())\n        .then(todos => \n            dispatch({\n            type: FETCH_TODOS,\n            todos\n        })\n    )\n}\n\nexport const fetchCompleted = () => dispatch =>  {\n    fetch(TODOS_URL)\n    .then(res => res.json())\n    .then(todos =>\n        dispatch({\n        type: FETCH_COMPLETED,\n        todos: todos.filter(t => t.completed === true)\n    })\n)\n}\n\nexport const createTodo = (todo) => dispatch =>  {\n\n    const newTodo = {\n        title: todo.title,\n        content: todo.content,\n        completed: false,\n        starred: false\n    }\n\n    fetch(TODOS_URL,{\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(newTodo)\n    })\n    .then(res => res.json())\n    .then(todo =>   dispatch({\n        type: NEW_TODO,\n        newTodo\n    }))\n}\n\nexport const deleteTodo = (id) => dispatch => {\n    fetch(`http://localhost:3000/todos/${id}`, {method: 'DELETE'})\n    .then(res => res.json())\n    .then((todo) =>  dispatch({\n        type: DELETE_TODO,\n        todo\n    }))\n}\n\nexport const markComplete = (todo) => dispatch => {\n    fetch(`http://localhost:3000/todos/${todo.id}`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        }, \n        body: JSON.stringify({\n            completed: true\n        })\n    })\n    .then(res => res.json())\n    .then((updatedTodo) => \n        dispatch({\n        type: COMPLETE_TODO,\n        updatedTodo\n    }))\n}\n\nexport const markStarred = (todo) => dispatch => {\n    fetch(`http://localhost:3000/todos/${todo.id}`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        }, \n        body: JSON.stringify({\n            starred: true\n        })\n    })\n    .then(res => res.json())\n    .then((updatedTodo) => {\n        dispatch({\n            type: STAR_TODO,\n            updatedTodo\n        })\n    }\n    )\n}\n\nexport const markUnstarred = (todo) => dispatch => {\n    fetch(`http://localhost:3000/todos/${todo.id}`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        }, \n        body: JSON.stringify({\n            starred: false\n        })\n    })\n    .then(res => res.json())\n    .then((updatedTodo) => {\n        dispatch({\n            type: STAR_TODO,\n            updatedTodo\n        })\n    }\n    )\n}\n\nexport const updateTodo = (todo) => dispatch => {\n\n    fetch(`http://localhost:3000/todos/${todo.id}`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        }, \n        body: JSON.stringify({\n            title: `${todo.title}`,\n            content: `${todo.content}`\n        })\n    })\n    .then(res => res.json())\n    .then((updatedTodo) => dispatch({\n        type: UPDATED_TODO,\n        updatedTodo\n    }))\n}"]},"metadata":{},"sourceType":"module"}