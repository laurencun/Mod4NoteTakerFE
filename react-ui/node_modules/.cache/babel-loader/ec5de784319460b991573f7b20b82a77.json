{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lauren/Flatiron/note-taker-fe/src/components/EditTodoForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { revertTodoToEdit } from '../actions/todoToEditAction.js';\nimport { updateTodo } from '../actions/todoActions';\nimport { Button } from '@material-ui/core';\n\nclass EditTodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.updateTodo(this.state);\n      this.props.revertTodoToEdit(this.state);\n      this.setState({\n        title: '',\n        content: ''\n      });\n      this.props.history.push('/');\n    };\n\n    this.state = {\n      id: '',\n      title: '',\n      content: ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.todoToEdit && prevState.title === '') {\n      this.setState({\n        id: this.props.todoToEdit.id,\n        title: this.props.todoToEdit.title,\n        content: this.props.todoToEdit.content\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          name: \"title\",\n          value: this.state.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          name: \"content\",\n          value: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: 10\n          },\n          variant: \"outlined\",\n          size: \"small\",\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoToEdit: state.todoToEdit\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateTodo,\n  revertTodoToEdit\n})(EditTodoForm);","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/components/EditTodoForm.js"],"names":["React","Component","connect","revertTodoToEdit","updateTodo","Button","EditTodoForm","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","state","title","content","history","push","id","componentDidUpdate","prevProps","prevState","todoToEdit","render","margin","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {revertTodoToEdit} from '../actions/todoToEditAction.js'\nimport {updateTodo} from '../actions/todoActions'\nimport { Button } from '@material-ui/core';\n\n\nclass EditTodoForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            id: '',\n            title: '',\n            content: ''\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if (this.props.todoToEdit && prevState.title === '') {\n            this.setState({\n                id: this.props.todoToEdit.id,\n                title: this.props.todoToEdit.title,\n                content: this.props.todoToEdit.content\n            })\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        this.props.updateTodo(this.state)\n        this.props.revertTodoToEdit(this.state)\n        \n        this.setState({\n            title: '',\n            content: ''\n        })\n\n        this.props.history.push('/')\n    }\n\n\n    render() {\n\n\n        return (\n            <div>\n                <h3>Edit Note</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Title</label>\n                    <input onChange={this.handleChange} type=\"text\" name=\"title\" value={this.state.title}/>\n                    <label>Content</label>\n                    <input onChange={this.handleChange} type=\"text\" name=\"content\" value={this.state.content}/>\n                    <Button style={{margin:10}} variant=\"outlined\" size='small'>Submit!</Button>\n                    <button>Submit!</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {todoToEdit: state.todoToEdit}\n}\n\nexport default connect(mapStateToProps, {updateTodo, revertTodoToEdit})(EditTodoForm)"]},"metadata":{},"sourceType":"module"}