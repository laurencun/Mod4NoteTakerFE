{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lauren/Flatiron/note-taker-fe/src/components/EditTodoForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import {editTodo} from '/Users/lauren/Flatiron/note-taker-fe/src/actions/todoToEditAction.js'\n\nimport { updateTodo } from '';\n\nclass EditTodoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const todo = {\n        id: this.state.id,\n        title: this.state.title,\n        content: this.state.content\n      };\n      updateTodo(todo);\n      this.setState({\n        title: '',\n        content: ''\n      });\n    };\n\n    this.state = {\n      id: '',\n      title: '',\n      content: ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.todoToEdit && prevState.title === '') {\n      this.setState({\n        id: this.props.todoToEdit.id,\n        title: this.props.todoToEdit.title,\n        content: this.props.todoToEdit.content\n      });\n    }\n  }\n\n  //remember to clear store state todoToEdit!\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          name: \"title\",\n          value: this.state.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          type: \"text\",\n          name: \"content\",\n          value: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoToEdit: state.todoToEdit\n  };\n};\n\nexport default connect(mapStateToProps)(EditTodoForm);","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/components/EditTodoForm.js"],"names":["React","Component","connect","updateTodo","EditTodoForm","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","todo","id","state","title","content","componentDidUpdate","prevProps","prevState","todoToEdit","render","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAAQC,UAAR,QAAyB,EAAzB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmBlBC,YAnBkB,GAmBFC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,OAAd;AAGH,KAvBiB;;AAAA,SAyBlBC,YAzBkB,GAyBFL,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAMC,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWD,EADN;AAETE,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFT;AAGTC,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AAHX,OAAb;AAKAhB,MAAAA,UAAU,CAACY,IAAD,CAAV;AACA,WAAKN,QAAL,CAAc;AACVS,QAAAA,KAAK,EAAE,EADG;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KArCiB;;AAEd,SAAKF,KAAL,GAAa;AACTD,MAAAA,EAAE,EAAE,EADK;AAETE,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACpC,QAAI,KAAKhB,KAAL,CAAWiB,UAAX,IAAyBD,SAAS,CAACJ,KAAV,KAAoB,EAAjD,EAAqD;AACjD,WAAKT,QAAL,CAAc;AACVO,QAAAA,EAAE,EAAE,KAAKV,KAAL,CAAWiB,UAAX,CAAsBP,EADhB;AAEVE,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWiB,UAAX,CAAsBL,KAFnB;AAGVC,QAAAA,OAAO,EAAE,KAAKb,KAAL,CAAWiB,UAAX,CAAsBJ;AAHrB,OAAd;AAKH;AACJ;;AAsBD;AAGAK,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKX,YAArB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAE,KAAKN,YAAtB;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,IAAI,EAAC,OAArD;AAA6D,UAAA,KAAK,EAAE,KAAKU,KAAL,CAAWC;AAA/E;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,QAAQ,EAAE,KAAKX,YAAtB;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,IAAI,EAAC,SAArD;AAA+D,UAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAzDgC;;AA4DrC,MAAMM,eAAe,GAAGR,KAAK,IAAI;AAC7B,SAAO;AAACM,IAAAA,UAAU,EAAEN,KAAK,CAACM;AAAnB,GAAP;AACH,CAFD;;AAIA,eAAerB,OAAO,CAACuB,eAAD,CAAP,CAAyBrB,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n// import {editTodo} from '/Users/lauren/Flatiron/note-taker-fe/src/actions/todoToEditAction.js'\nimport {updateTodo} from ''\n\nclass EditTodoForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            id: '',\n            title: '',\n            content: ''\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if (this.props.todoToEdit && prevState.title === '') {\n            this.setState({\n                id: this.props.todoToEdit.id,\n                title: this.props.todoToEdit.title,\n                content: this.props.todoToEdit.content\n            })\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const todo = {\n            id: this.state.id,\n            title: this.state.title,\n            content: this.state.content\n        }\n        updateTodo(todo)\n        this.setState({\n            title: '',\n            content: ''\n        })\n    }\n\n    //remember to clear store state todoToEdit!\n\n\n    render() {\n\n        return (\n            <div>\n                <h3>Edit Note</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Title</label>\n                    <input onChange={this.handleChange} type=\"text\" name=\"title\" value={this.state.title}/>\n                    <label>Content</label>\n                    <input onChange={this.handleChange} type=\"text\" name=\"content\" value={this.state.content}/>\n                    <button>Submit!</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {todoToEdit: state.todoToEdit}\n}\n\nexport default connect(mapStateToProps)(EditTodoForm)"]},"metadata":{},"sourceType":"module"}