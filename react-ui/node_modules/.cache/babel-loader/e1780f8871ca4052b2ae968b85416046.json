{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lauren/Flatiron/note-taker-fe/src/App.js\";\nimport { Component } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport TodoForm from './components/TodoForm';\nimport ShowTodo from './components/ShowTodo';\nimport EditTodoForm from './components/EditTodoForm';\nimport NavBar from './components/NavBar';\nimport MainContainer from './containers/MainContainer';\nimport { connect } from 'react-redux';\nimport { currentUser } from '../actions/auth';\nimport { fetchTodos, fetchCompleted } from '../actions/todoActions';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers/manageTodosAndUsers';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nconst middleware = [thunk];\n\nclass App extends Component {\n  componentDidMount() {\n    const token = localStorage.getItem('my_app_token');\n\n    if (!token) {\n      this.props.history.push('/login');\n    } else {\n      //get back user associated with token\n      const reqObj = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      fetch('http://localhost:3000/current_user', reqObj).then(res => res.json()).then(data => {\n        console.log(data.user);\n        this.props.currentUser(data.user);\n      });\n      this.props.fetchTodos();\n    }\n  }\n\n  render() {\n    const store = createStore(rootReducer, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/new\",\n            component: TodoForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit/:id\",\n            component: EditTodoForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/todo/:id\",\n            component: ShowTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: MainContainer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  fetchTodos,\n  currentUser\n})(App);","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/App.js"],"names":["Component","Login","TodoForm","ShowTodo","EditTodoForm","NavBar","MainContainer","connect","currentUser","fetchTodos","fetchCompleted","Provider","createStore","applyMiddleware","compose","rootReducer","thunk","BrowserRouter","Router","Route","middleware","App","componentDidMount","token","localStorage","getItem","props","history","push","reqObj","method","headers","Authorization","fetch","then","res","json","data","console","log","user","render","store","window","__REDUX_DEVTOOLS_EXTENSION__","mapStateToProps","state","todos","auth"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport './App.css';\n\nimport Login from './components/Login';\nimport TodoForm from './components/TodoForm';\nimport ShowTodo from './components/ShowTodo';\nimport EditTodoForm from './components/EditTodoForm';\nimport NavBar from './components/NavBar';\nimport MainContainer from './containers/MainContainer'\n\nimport {connect} from 'react-redux'\nimport {currentUser} from '../actions/auth'\nimport {fetchTodos, fetchCompleted} from '../actions/todoActions'\n\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './reducers/manageTodosAndUsers'\nimport thunk from 'redux-thunk'\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nconst middleware = [thunk]\n\nclass App extends Component {\n\n  componentDidMount() {\n    const token = localStorage.getItem('my_app_token')\n    if(!token){\n    this.props.history.push('/login')\n    }\n    else{\n        //get back user associated with token\n        const reqObj = {\n            method: 'GET', \n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n        fetch('http://localhost:3000/current_user', reqObj)\n        .then(res => res.json())\n        .then((data) => {\n            console.log(data.user)\n            this.props.currentUser(data.user)\n        })\n    this.props.fetchTodos()\n    }\n}\n\n  render(){\n\n    const store = createStore(\n      rootReducer,\n      compose(\n        applyMiddleware(...middleware), \n          window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n    )\n\n\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Route exact path='/login' component={Login}/>\n        {/* <Route path='/:id' component={Todo} /> */}\n        <Route exact path='/new' component={TodoForm} />\n        <Route path='/edit/:id' component={EditTodoForm} />\n        <Route path='/todo/:id' component={ShowTodo} />\n        <Route exact path='/' component={MainContainer}/>\n      </Router>\n      </div>\n  </Provider>\n  );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {fetchTodos, currentUser})(App)"]},"metadata":{},"sourceType":"module"}