{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lauren/Flatiron/note-taker-fe/src/containers/MainContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodos, fetchCompleted } from '../actions/todoActions';\nimport TodoIndex from '/Users/lauren/Flatiron/note-taker-fe/src/components/TodoIndex.js';\nimport Button from '@';\nlet toggle = true;\n\nclass MainContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCompleted = () => {\n      toggle = !toggle;\n\n      if (toggle === false) {\n        this.props.fetchCompleted();\n      } else {\n        this.props.fetchTodos();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTodos();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [toggle === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          right: '0'\n        },\n        onClick: this.showCompleted,\n        children: \"Show Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          right: '0'\n        },\n        onClick: this.showCompleted,\n        children: \"Show All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(TodoIndex, {\n        todos: this.props.todos,\n        handleEdit: this.handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nexport default connect(mapStateToProps, {\n  fetchTodos,\n  fetchCompleted\n})(MainContainer);","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/containers/MainContainer.js"],"names":["React","Component","connect","fetchTodos","fetchCompleted","TodoIndex","Button","toggle","MainContainer","showCompleted","props","componentDidMount","render","position","right","todos","handleEdit","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,cAApB,QAAyC,wBAAzC;AACA,OAAOC,SAAP,MAAsB,kEAAtB;AACA,OAAOC,MAAP,MAAmB,GAAnB;AAEA,IAAIC,MAAM,GAAG,IAAb;;AAEA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAMlCQ,aANkC,GAMlB,MAAM;AAClBF,MAAAA,MAAM,GAAG,CAACA,MAAV;;AACA,UAAIA,MAAM,KAAK,KAAf,EAAqB;AACrB,aAAKG,KAAL,CAAWN,cAAX;AACC,OAFD,MAGK;AACD,aAAKM,KAAL,CAAWP,UAAX;AACH;AACJ,KAdiC;AAAA;;AAElCQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,KAAL,CAAWP,UAAX;AACH;;AAYDS,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,iBACKL,MAAM,KAAK,IAAX,gBACD;AAAQ,QAAA,KAAK,EAAE;AAACM,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAf;AAAmD,QAAA,OAAO,EAAE,KAAKL,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,gBAEA;AAAQ,QAAA,KAAK,EAAE;AAACI,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAf;AAAmD,QAAA,OAAO,EAAE,KAAKL,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL,eAKI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWK,KAA7B;AAAoC,QAAA,UAAU,EAAE,KAAKC;AAArD;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA5BiC;;AA+BtC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BH,EAAAA,KAAK,EAAEG,KAAK,CAACH;AADiB,CAAL,CAA7B;;AAIA,eAAeb,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAuDI,aAAvD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {fetchTodos, fetchCompleted} from '../actions/todoActions'\nimport TodoIndex from '/Users/lauren/Flatiron/note-taker-fe/src/components/TodoIndex.js'\nimport Button from '@'\n\nlet toggle = true\n\nclass MainContainer extends Component {\n\n    componentDidMount() {\n        this.props.fetchTodos()\n    }\n\n    showCompleted = () => {\n        toggle = !toggle\n        if (toggle === false){\n        this.props.fetchCompleted()\n        }\n        else {\n            this.props.fetchTodos()\n        }\n    }\n\n    render() {\n\n        return (\n            <div >\n                {toggle === true ?\n                <button style={{position: 'absolute', right: '0'}} onClick={this.showCompleted}>Show Completed</button>\n                :<button style={{position: 'absolute', right: '0'}} onClick={this.showCompleted}>Show All</button>\n                }\n                <TodoIndex todos={this.props.todos} handleEdit={this.handleEdit}/>\n            </div>\n        )\n    \n    }\n}\n\nconst mapStateToProps = state => ({\n    todos: state.todos\n})\n\nexport default connect(mapStateToProps, {fetchTodos, fetchCompleted})(MainContainer)"]},"metadata":{},"sourceType":"module"}