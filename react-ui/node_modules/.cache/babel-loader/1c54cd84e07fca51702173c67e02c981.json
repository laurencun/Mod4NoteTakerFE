{"ast":null,"code":"export default function todosReducer(state = [], action) {\n  let updatedTodos;\n\n  switch (action.type) {\n    case \"FETCH_TODOS\":\n      return action.todos;\n\n    case \"NEW_TODO\":\n      return [...state, action.todo];\n\n    case \"DELETE_TODO\":\n      updatedTodos = state.filter(t => t.id !== action.todo.id);\n      return updatedTodos;\n\n    case \"COMPLETE_TODO\":\n      console.log(action.payload);\n      updat;\n      updatedTodos = state.map(t => {\n        if (t.id === action.payload) {\n          return state.find(action.payload);\n        } else {\n          return t;\n        }\n      });\n      return updatedTodos;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/reducers/todosReducer.js"],"names":["todosReducer","state","action","updatedTodos","type","todos","todo","filter","t","id","console","log","payload","updat","map","find"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAA0C;AACvD,MAAIC,YAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAK,aAAL;AACE,aAAOF,MAAM,CAACG,KAAd;;AACF,SAAK,UAAL;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACI,IAAlB,CAAP;;AACF,SAAK,aAAL;AACEH,MAAAA,YAAY,GAAGF,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACI,IAAP,CAAYG,EAAvC,CAAf;AACA,aAAON,YAAP;;AACF,SAAK,eAAL;AACEO,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,OAAnB;AACAC,MAAAA,KAAK;AACLV,MAAAA,YAAY,GAAGF,KAAK,CAACa,GAAN,CAAUN,CAAC,IAAI;AAC5B,YAAGA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACU,OAAnB,EAA2B;AACzB,iBAAOX,KAAK,CAACc,IAAN,CAAWb,MAAM,CAACU,OAAlB,CAAP;AACD,SAFD,MAGI;AACF,iBAAOJ,CAAP;AACD;AACF,OAPc,CAAf;AAQA,aAAOL,YAAP;;AACF;AACE,aAAOF,KAAP;AArBN;AAuBC","sourcesContent":["export default function todosReducer(state = [], action) {\n  let updatedTodos\n  switch (action.type) {\n      case \"FETCH_TODOS\":\n        return action.todos\n      case \"NEW_TODO\":\n        return [...state, action.todo]\n      case \"DELETE_TODO\":\n        updatedTodos = state.filter(t => t.id !== action.todo.id)\n        return updatedTodos\n      case \"COMPLETE_TODO\":\n        console.log(action.payload)\n        updat\n        updatedTodos = state.map(t => {\n          if(t.id === action.payload){\n            return state.find(action.payload)\n          }\n          else{\n            return t\n          }\n        })\n        return updatedTodos\n      default:\n        return state\n      }\n  }"]},"metadata":{},"sourceType":"module"}