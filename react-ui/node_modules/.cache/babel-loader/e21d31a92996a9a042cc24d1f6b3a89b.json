{"ast":null,"code":"const BASE_URL = 'http://localhost:3000';\nconst TODOS_URL = `${BASE_URL}/todos`;\nconst FETCH_TODOS = 'FETCH_TODOS';\nconst FETCH_COMPLETED = 'FETCH_COMPLETED';\nconst NEW_TODO = 'NEW_TODO';\nconst DELETE_TODO = 'DELETE_TODO';\nconst COMPLETE_TODO = 'COMPLETE_TODO';\nconst UPDATED_TODO = 'UPDATED_TODO';\nconst STAR_TODO = 'STAR_TODO';\nexport const fetchTodos = () => dispatch => {\n  fetch(TODOS_URL).then(res => res.json()).then(todos => dispatch({\n    type: FETCH_TODOS,\n    todos\n  }));\n};\nexport const fetchCompleted = () => dispatch => {\n  fetch(TODOS_URL).then(res => res.json()).then(todos => dispatch({\n    type: FETCH_COMPLETED,\n    todos: todos.filter(t => t.completed === true)\n  }));\n};\nexport const createTodo = todo => dispatch => {\n  fetch(TODOS_URL, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(todo)\n  }).then(res => res.json()).then(todo => dispatch({\n    type: NEW_TODO,\n    todo\n  }));\n};\nexport const deleteTodo = id => dispatch => {\n  console.log('action');\n  fetch(`http://localhost:3000/todos/${id}`, {\n    method: 'DELETE'\n  }).then(res => res.json()).then(todo => dispatch({\n    type: DELETE_TODO,\n    todo\n  }));\n};\nexport const markComplete = todo => dispatch => {\n  fetch(`http://localhost:3000/todos/${todo.id}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      completed: true\n    })\n  }).then(res => res.json()).then(updatedTodo => dispatch({\n    type: COMPLETE_TODO,\n    updatedTodo\n  }));\n};\nexport const markStarred = todo => dispatch => {\n  fetch(`http://localhost:3000/todos/${todo.id}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      starred: true\n    })\n  }).then(res => res.json()).then(updatedTodo => {\n    dispatch({\n      type: STAR_TODO,\n      updatedTodo\n    });\n  });\n};\nexport const markUnstarred = todo => dispatch => {\n  fetch(`http://localhost:3000/todos/${todo.id}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      starred: false\n    })\n  }).then(res => res.json()).then(updatedTodo => {\n    dispatch({\n      type: TAR_TODO,\n      updatedTodo\n    });\n  });\n};\nexport const updateTodo = todo => dispatch => {\n  fetch(`http://localhost:3000/todos/${todo.id}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: `${todo.title}`,\n      content: `${todo.content}`\n    })\n  }).then(res => res.json()).then(updatedTodo => dispatch({\n    type: UPDATED_TODO,\n    updatedTodo\n  }));\n};","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/actions/todoActions.js"],"names":["BASE_URL","TODOS_URL","FETCH_TODOS","FETCH_COMPLETED","NEW_TODO","DELETE_TODO","COMPLETE_TODO","UPDATED_TODO","STAR_TODO","fetchTodos","dispatch","fetch","then","res","json","todos","type","fetchCompleted","filter","t","completed","createTodo","todo","method","headers","body","JSON","stringify","deleteTodo","id","console","log","markComplete","updatedTodo","markStarred","starred","markUnstarred","TAR_TODO","updateTodo","title","content"],"mappings":"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","sourcesContent":["const BASE_URL = 'http://localhost:3000'\nconst TODOS_URL = `${BASE_URL}/todos`\nconst FETCH_TODOS = 'FETCH_TODOS'\nconst FETCH_COMPLETED = 'FETCH_COMPLETED'\nconst NEW_TODO = 'NEW_TODO'\nconst DELETE_TODO = 'DELETE_TODO'\nconst COMPLETE_TODO = 'COMPLETE_TODO'\nconst UPDATED_TODO = 'UPDATED_TODO'\nconst STAR_TODO = 'STAR_TODO'\n\nexport const fetchTodos = () => dispatch =>  {\n        fetch(TODOS_URL)\n        .then(res => res.json())\n        .then(todos => \n            dispatch({\n            type: FETCH_TODOS,\n            todos\n        })\n    )\n}\n\nexport const fetchCompleted = () => dispatch =>  {\n    fetch(TODOS_URL)\n    .then(res => res.json())\n    .then(todos =>\n        dispatch({\n        type: FETCH_COMPLETED,\n        todos: todos.filter(t => t.completed === true)\n    })\n)\n}\n\nexport const createTodo = (todo) => dispatch =>  {\n    fetch(TODOS_URL,{\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(todo)\n    })\n    .then(res => res.json())\n    .then(todo =>   dispatch({\n        type: NEW_TODO,\n        todo\n    }))\n}\n\nexport const deleteTodo = (id) => dispatch => {\n    console.log('action')\n    fetch(`http://localhost:3000/todos/${id}`, {method: 'DELETE'})\n    .then(res => res.json())\n    .then((todo) =>  dispatch({\n        type: DELETE_TODO,\n        todo\n    }))\n}\n\nexport const markComplete = (todo) => dispatch => {\n    fetch(`http://localhost:3000/todos/${todo.id}`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        }, \n        body: JSON.stringify({\n            completed: true\n        })\n    })\n    .then(res => res.json())\n    .then((updatedTodo) => \n        dispatch({\n        type: COMPLETE_TODO,\n        updatedTodo\n    }))\n}\n\nexport const markStarred = (todo) => dispatch => {\n    fetch(`http://localhost:3000/todos/${todo.id}`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        }, \n        body: JSON.stringify({\n            starred: true\n        })\n    })\n    .then(res => res.json())\n    .then((updatedTodo) => {\n        dispatch({\n            type: STAR_TODO,\n            updatedTodo\n        })\n    }\n    )\n}\n\nexport const markUnstarred = (todo) => dispatch => {\n    fetch(`http://localhost:3000/todos/${todo.id}`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        }, \n        body: JSON.stringify({\n            starred: false\n        })\n    })\n    .then(res => res.json())\n    .then((updatedTodo) => {\n        dispatch({\n            type: TAR_TODO,\n            updatedTodo\n        })\n    }\n    )\n}\n\nexport const updateTodo = (todo) => dispatch => {\n\n    fetch(`http://localhost:3000/todos/${todo.id}`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json'\n        }, \n        body: JSON.stringify({\n            title: `${todo.title}`,\n            content: `${todo.content}`\n        })\n    })\n    .then(res => res.json())\n    .then((updatedTodo) => dispatch({\n        type: UPDATED_TODO,\n        updatedTodo\n    }))\n}"]},"metadata":{},"sourceType":"module"}