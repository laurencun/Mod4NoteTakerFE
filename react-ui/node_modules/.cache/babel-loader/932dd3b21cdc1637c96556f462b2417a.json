{"ast":null,"code":"// import {Component} from 'react'\n// import {connect} from 'react-redux'\n// import {getTodo} from '../actions/todoToShowAction'\n// import {editTodo} from '../actions/todoToEditAction.js'\n// import {deleteTodo, markComplete} from '../actions/todoActions'\n// class ShowTodo extends Component () {\n//     componentDidMount() {\n//         getTodo(window.location.href.split('/')[3])\n// }\n// todo = todos.filter(todo => todo.id === window.location.href.split('/')[3])\n// handleDelete = () => {\n//     deleteTodo(todo.id)\n// }\n// handleComplete = () => {\n//     markComplete(todo)\n// }\n// handleEdit = (todo) => {\n//     window.history.push(`/edit/${todo.id}`)\n//     editTodo(todo)\n// }\n// render() {\n// return (\n//     <div>\n//         <div>\n//             <h3>'hi'</h3>\n{\n  /* <p style={{textDecoration: todo.completed ? \n  'line-through' : 'none'}}>{todo.content}</p>\n  {todo.title ?\n  <div>\n     {todo.completed === false ?\n  <div>\n  <button onClick={handleComplete}>Mark As Complete</button>\n  <button onClick={() => handleEdit(todo)}>Edit</button>\n  </div>\n  :null}\n  <button onClick={handleDelete}>Delete</button>\n  </div>\n  : null} */\n}\n{\n  /* </div>\n  </div>\n  )\n  }\n  }\n  const mapStateToProps = state => ({\n  todoToShow: state.todoToShow\n  })\n  export default connect(mapStateToProps, {deleteTodo, editTodo, markComplete})(ShowTodo) */\n}","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/components/ShowTodo.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACI;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEY;AAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2B;AACf;AAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAE2F","sourcesContent":["// import {Component} from 'react'\n// import {connect} from 'react-redux'\n\n// import {getTodo} from '../actions/todoToShowAction'\n// import {editTodo} from '../actions/todoToEditAction.js'\n// import {deleteTodo, markComplete} from '../actions/todoActions'\n\n// class ShowTodo extends Component () {\n\n\n//     componentDidMount() {\n//         getTodo(window.location.href.split('/')[3])\n    // }\n\n    // todo = todos.filter(todo => todo.id === window.location.href.split('/')[3])\n\n    // handleDelete = () => {\n    //     deleteTodo(todo.id)\n    // }\n\n    // handleComplete = () => {\n    //     markComplete(todo)\n    // }\n\n    // handleEdit = (todo) => {\n    //     window.history.push(`/edit/${todo.id}`)\n    //     editTodo(todo)\n    // }\n\n    // render() {\n\n    // return (\n    //     <div>\n    //         <div>\n    //             <h3>'hi'</h3>\n                \n                {/* <p style={{textDecoration: todo.completed ? \n                'line-through' : 'none'}}>{todo.content}</p>\n\n                {todo.title ?\n                <div>\n                    {todo.completed === false ?\n                <div>\n                <button onClick={handleComplete}>Mark As Complete</button>\n                <button onClick={() => handleEdit(todo)}>Edit</button>\n                </div>\n                :null}\n                <button onClick={handleDelete}>Delete</button>\n                </div>\n                : null} */}\n            {/* </div>\n        </div>\n    )\n}\n}\n\nconst mapStateToProps = state => ({\n    todoToShow: state.todoToShow\n})\n\nexport default connect(mapStateToProps, {deleteTodo, editTodo, markComplete})(ShowTodo) */}"]},"metadata":{},"sourceType":"module"}