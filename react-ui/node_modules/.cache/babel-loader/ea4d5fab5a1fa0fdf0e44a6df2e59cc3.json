{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lauren/Flatiron/note-taker-fe/src/components/ShowTodo.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodoToShow } from '../actions/todoToShowAction';\nimport { editTodo } from '../actions/todoToEditAction.js';\nimport { deleteTodo, markComplete } from '../actions/todoActions';\n\nclass ShowTodo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoToShow: this.props.todoToShow\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchTodoToShow(window.location.href.split('/')[4]);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.todoToEdit && prevState.title === '') {\n      this.setState({\n        id: this.props.todoToEdit.id,\n        title: this.props.todoToEdit.title,\n        content: this.props.todoToEdit.content\n      });\n    }\n  }\n\n  render() {\n    const handleDelete = () => {\n      deleteTodo(this.props.todoToShow.id);\n    };\n\n    const handleComplete = () => {\n      markComplete(this.props.todoToShow);\n    };\n\n    const handleEdit = todo => {\n      window.history.push(`/edit/${this.props.todoToShow.id}`);\n      editTodo(this.props.todoToShow);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.todoToShow != null ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.props.todoToShow.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"sorry, couldn't find todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoToEdit: state.todoToEdit\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteTodo,\n  editTodo,\n  fetchTodoToShow,\n  markComplete\n})(ShowTodo);","map":{"version":3,"sources":["/Users/lauren/Flatiron/note-taker-fe/src/components/ShowTodo.js"],"names":["Component","connect","fetchTodoToShow","editTodo","deleteTodo","markComplete","ShowTodo","constructor","props","state","todoToShow","componentWillMount","window","location","href","split","componentDidUpdate","prevProps","prevState","todoToEdit","title","setState","id","content","render","handleDelete","handleComplete","handleEdit","todo","history","push","mapStateToProps"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,eAAR,QAA8B,6BAA9B;AACA,SAAQC,QAAR,QAAuB,gCAAvB;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,wBAAvC;;AAGA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC7BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE;AADd,KAAb;AAGH;;AAGDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKH,KAAL,CAAWN,eAAX,CAA2BU,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAA3B;AACF;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACrC,QAAI,KAAKV,KAAL,CAAWW,UAAX,IAAyBD,SAAS,CAACE,KAAV,KAAoB,EAAjD,EAAqD;AACjD,WAAKC,QAAL,CAAc;AACVC,QAAAA,EAAE,EAAE,KAAKd,KAAL,CAAWW,UAAX,CAAsBG,EADhB;AAEVF,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWW,UAAX,CAAsBC,KAFnB;AAGVG,QAAAA,OAAO,EAAE,KAAKf,KAAL,CAAWW,UAAX,CAAsBI;AAHrB,OAAd;AAKH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,YAAY,GAAG,MAAM;AACvBrB,MAAAA,UAAU,CAAC,KAAKI,KAAL,CAAWE,UAAX,CAAsBY,EAAvB,CAAV;AACH,KAFD;;AAIA,UAAMI,cAAc,GAAG,MAAM;AACzBrB,MAAAA,YAAY,CAAC,KAAKG,KAAL,CAAWE,UAAZ,CAAZ;AACH,KAFD;;AAIA,UAAMiB,UAAU,GAAIC,IAAD,IAAU;AACzBhB,MAAAA,MAAM,CAACiB,OAAP,CAAeC,IAAf,CAAqB,SAAQ,KAAKtB,KAAL,CAAWE,UAAX,CAAsBY,EAAG,EAAtD;AACAnB,MAAAA,QAAQ,CAAC,KAAKK,KAAL,CAAWE,UAAZ,CAAR;AACH,KAHD;;AAKJ,wBAEK;AAAA,6BACG;AAAA,kBACK,KAAKF,KAAL,CAAWE,UAAX,IAAyB,IAAzB,gBACD;AAAA,oBAAK,KAAKF,KAAL,CAAWE,UAAX,CAAsBU;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADC,gBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAFL;AA4BC;;AAlE4B;;AAsEjC,MAAMW,eAAe,GAAGtB,KAAK,IAAI;AAC7B,SAAO;AAACU,IAAAA,UAAU,EAAEV,KAAK,CAACU;AAAnB,GAAP;AACH,CAFD;;AAIA,eAAelB,OAAO,CAAC8B,eAAD,EAAkB;AAAC3B,EAAAA,UAAD;AAAaD,EAAAA,QAAb;AAAuBD,EAAAA,eAAvB;AAAwCG,EAAAA;AAAxC,CAAlB,CAAP,CAAgFC,QAAhF,CAAf","sourcesContent":["import {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport {fetchTodoToShow} from '../actions/todoToShowAction'\nimport {editTodo} from '../actions/todoToEditAction.js'\nimport {deleteTodo, markComplete} from '../actions/todoActions'\n\n\nclass ShowTodo extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            todoToShow: this.props.todoToShow\n        }\n    }\n\n\n    componentWillMount() {\n        this.props.fetchTodoToShow(window.location.href.split('/')[4])\n     }\n\n     componentDidUpdate(prevProps, prevState){\n        if (this.props.todoToEdit && prevState.title === '') {\n            this.setState({\n                id: this.props.todoToEdit.id,\n                title: this.props.todoToEdit.title,\n                content: this.props.todoToEdit.content\n            })\n        }\n    }\n\n    render() {\n\n        const handleDelete = () => {\n            deleteTodo(this.props.todoToShow.id)\n        }\n    \n        const handleComplete = () => {\n            markComplete(this.props.todoToShow)\n        }\n    \n        const handleEdit = (todo) => {\n            window.history.push(`/edit/${this.props.todoToShow.id}`)\n            editTodo(this.props.todoToShow)\n        }\n\n    return (\n\n         <div>\n            <div>\n                {this.props.todoToShow != null ?\n                <h2>{this.props.todoToShow.title}</h2>:\n                <h2>sorry, couldn't find todo</h2>\n                }\n                \n                {/* <p style={{textDecoration: this.props.todoToShow.completed ? \n                'line-through' : 'none'}}>{this.props.todoToShow.content}</p>\n\n                {this.props.todoToShow.title ?\n                <div>\n                    {this.props.todoToShow.completed === false ?\n                <div>\n                <button onClick={handleComplete}>Mark As Complete</button>\n                <button onClick={() => handleEdit(this.props.todoToShow)}>Edit</button>\n                </div>\n                :null}\n                <button onClick={handleDelete}>Delete</button>\n                </div>\n                : null} */}\n                \n                \n            </div>\n        </div>\n    )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {todoToEdit: state.todoToEdit}\n}\n\nexport default connect(mapStateToProps, {deleteTodo, editTodo, fetchTodoToShow, markComplete})(ShowTodo)"]},"metadata":{},"sourceType":"module"}